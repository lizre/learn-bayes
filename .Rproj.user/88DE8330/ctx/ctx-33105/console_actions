{
    "type": [
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2
    ],
    "data": [
        "\nR version 4.0.3 (2020-10-10) -- \"Bunny-Wunnies Freak Out\"\nCopyright (C) 2020 The R Foundation for Statistical Computing\nPlatform: x86_64-apple-darwin17.0 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "# setup and import data",
        "> ",
        "here::here()",
        "[1] \"/Users/lizre/Downloads/bayes_r\"\n",
        "> ",
        "prepost = read.csv(\"data/prepost_joined.csv\") # example paired t test data",
        "> ",
        "prepost",
        "   dass_stresssum_pre burnoutpre                               HMI_ID dass_stresssum_post\n1                  18          2 f49641df-42c8-4b5d-9ce9-34953664a115                   4\n2                  24          3 c5db1137-2aa1-42ff-9ca9-f37d45c920ff                  NA\n3                   6          2 62a094bb-96f2-4bd5-9087-397141734f37                  NA\n4                  16          1 0d26f32c-d305-477d-9320-606039482a9e                  NA\n5                  22          1 48e02eff-36de-484f-8744-2bb9bf600c83",
        "                  NA\n6                  14          1 6175c9e2-bb95-4bd1-b05c-b350fb830474                  NA\n7                  14          2 aad9516d-cdd4-48c8-b5d9-0383fe5f944c                  14\n8                  16          4 889889ef-e93b-4419-8ac3-49c9a05bf4d4                  NA\n9                  12          2 c6596e04-8ac9-4740-b8e4-878d18709092                  NA\n10                 12          3 1e7f516d-810e-483e-9730-7d466f27d887                  NA\n11                 10          2 350a8e41-c3bb-4563-808b-4f5b27b58c24",
        "                  12\n12                  0          2 0896f340-0115-408f-99e1-9ee22bd4c190                  NA\n13                  2          2 01fc873a-d310-4497-bd1f-76ecd8065ee9                  NA\n14                 28          2 8bb3e156-4b9c-4bd3-a498-30484f6b7902                  NA\n15                 14          2 3c8d2438-fbe5-4948-bf93-460d07176c64                  NA\n16                 28          3 796bc92b-0630-4826-bd3b-2a333d2a627b                  NA\n17                 10          2 193ba5ec-ca15-4a89-9894-992675046ae0",
        "                  NA\n18                 18          4 46709024-4744-450b-b3b4-3c6293daac6c                  NA\n19                 10          1 3eb489ae-66cc-42ca-9fa3-7e94a6596585                  NA\n20                 16          3 f1d9ebc4-f80e-4b53-b807-c82373fa94b5                  NA\n21                  6          2 a1c5fbb9-61d0-4734-8ae8-dcc98dc1aea2                  NA\n22                 14          3 78e92b27-7397-4289-8710-803651152c52                  NA\n23                 18          4 d3af3ec5-ce9a-411d-97da-39026576dffb",
        "                  NA\n24                 10          4 3c8d2438-fbe5-4948-bf93-460d07176c64                  NA\n25                 14          1 9690f4fd-d998-4f7b-929d-ad1d9397ac1d                  NA\n26                 20          3 bbe02e36-e1df-436a-8aa6-d3fe45954bbb                  NA\n27                 12          2 35ded6b7-78c3-4d95-8acc-9d7e0e6deda9                  NA\n28                  8          2 3c227710-4e5f-4bbe-8177-b6db4b36d101                  NA\n29                 30          4 a58d97bc-5ab6-465a-8268-3fffea25ed46",
        "                  NA\n30                 16          1 426b95e6-b08c-4d97-8c3f-8effa17d0463                   6\n31                  8          2 ce548013-332b-472a-a59b-9f576b14984f                  NA\n32                  8          2 5fb4db94-7593-4d0b-9c32-cb6fa50f6ed6                   8\n33                  6          2 d20d4163-781e-4bda-94d6-13619ae3bfc2                  NA\n34                 16          2 36209c20-6df8-4832-b78f-038cc696b7c4                  NA\n35                 36          3                                     ",
        "                  NA\n36                  2          1 2424b2ef-2a85-48d5-928d-7d7a87b40fee                  NA\n37                 16          1 ee246729-f8a6-468d-8d90-0ec2e042f008                  12\n38                 10          2 3e8521e3-1855-49bd-8bce-ba8571d5f245                  10\n39                  6          2 3891035f-4ddb-4e0a-9b1a-a0897cb8cb5e                  NA\n40                  4          2 517c13f1-414a-4c3a-b774-75c415e40db5                  NA\n41                 14          3 52bf5f77-105c-4453-8b2e-78cbf79be3e1",
        "                  NA\n42                 30          3 71bbc874-54b9-48dc-80b2-5e9ac2c5d71e                  NA\n43                 14          2 aa6adf6d-8cd8-479f-8bab-0acc70674875                  NA\n44                 22          2 bc468083-eede-4a54-9f65-3697d6650b10                  NA\n45                 12          1 93993943-33af-4b94-bbbb-ba124c810888                  NA\n46                  6          3 65cc566f-7ba0-4aa8-9b2a-c4daa43d6994                  NA\n47                  4          2 821433ca-c854-43f3-8eed-1243452c4efc",
        "                  NA\n48                 10          3 69940d0f-bcfc-4dd2-b6b7-074962afdead                   6\n49                  8          2 601e490a-d085-4c9c-9055-dec33967f264                  14\n50                 10          1 870016f5-1209-424c-879f-6a82c6e70c52                  NA\n51                  4          2 1003b981-c6de-4145-8017-275fdde32566                  NA\n52                 14          2 4b80ef9d-7e50-4011-b5a4-db79a1ef6f35                  22\n53                  8          2 d0fb5582-30f3-4fc2-8691-081d47b4c809",
        "                  NA\n54                  2          2 b0049f9b-815a-41aa-b5ae-9ea63ef390a7                  NA\n55                  6          3 e84539a6-d8d9-4437-94ad-58da9c621a8b                  NA\n56                 16          2 12f37465-1c6d-4f10-be3b-a9278c966fcf                  14\n57                 34          3 f730afde-15d6-4a8f-8f62-475abebb9e80                  NA\n58                 10          4 4ca27dd4-bdf6-4082-a097-f6ba056374ba                   4\n59                 14          2 c78cee2b-b563-4ef5-9988-8fd3ac52d2bf",
        "                  16\n60                 NA         NA a555413c-4ebd-45a0-ba14-cfdbacd96e29                  NA\n61                 NA         NA 56f9ffb5-f4f3-4218-97d6-97b1f14e2ad4                  NA\n62                 NA         NA 25aed948-1729-4544-8ad9-89d7a683c78d                  NA\n63                 NA         NA 9d70c50b-5202-4264-aff9-c26279f50ed1                   0\n64                 NA         NA 5ab656c6-6ed5-4bb0-9e36-1c028ca7a167                   0\n65                 NA         NA a7b94840-7681-45af-ae0b-e09018cfd1b5",
        "                  NA\n66                 NA         NA a7b94840-7681-45af-ae0b-e09018cfd1b5                  NA\n67                 NA         NA acfe2a22-5fd2-4370-8fe9-3b83cc52e51e                  12\n   burnoutpost\n1            1\n2           NA\n3           NA\n4           NA\n5           NA\n6           NA\n7            2\n8           NA\n9           NA\n10          NA\n11           2\n12          NA\n13          NA\n14          NA\n15          NA\n16          NA\n17          NA\n18          NA\n19          NA\n20          NA",
        "\n21          NA\n22          NA\n23          NA\n24          NA\n25          NA\n26          NA\n27          NA\n28          NA\n29          NA\n30           2\n31          NA\n32           1\n33          NA\n34          NA\n35          NA\n36          NA\n37           2\n38           2\n39          NA\n40          NA\n41          NA\n42          NA\n43          NA\n44          NA\n45          NA\n46          NA\n47          NA\n48           2\n49           2\n50          NA\n51          NA\n52           2\n53          NA\n54          NA\n55",
        "          NA\n56           2\n57          NA\n58           2\n59           2\n60          NA\n61          NA\n62          NA\n63           2\n64           2\n65          NA\n66          NA\n67           1\n",
        "> ",
        "View(prepost)",
        "> ",
        "indep_ttest = read.csv(\"test.csv\") # example independent groups t test data",
        "Error in file(file, \"rt\") : cannot open the connection\n",
        "In addition: ",
        "Warning message:\n",
        "In file(file, \"rt\") :",
        "\n ",
        " cannot open file 'test.csv': No such file or directory\n",
        "> ",
        "indep_ttest = read.csv(\"data/test.csv\") # example independent groups t test data",
        "> ",
        "View(prepost)",
        "> ",
        "View(indep_ttest)",
        "> ",
        "library(fabricatr)",
        "> ",
        "data <- fabricatr::fabricate(",
        "+ ",
        "  person_identifier = add_level(",
        "+ ",
        "    N = 25, ",
        "+ ",
        "    time_session_begin = NA,",
        "+ ",
        "    time_session_end = NA,",
        "+ ",
        "    group = as.integer(rnorm(N, 1.5, .5)),",
        "+ ",
        "    deviceInfo_osVersion = NA,",
        "+ ",
        "    binary_var = draw_binary(N = N, prob = 0.25)",
        "+ ",
        "  ))",
        "> ",
        "View(data)  ",
        "> ",
        "data <- fabricatr::fabricate(",
        "+ ",
        "  person_identifier = add_level(",
        "+ ",
        "    N = 25, ",
        "+ ",
        "    id = (1:N),",
        "+ ",
        "    group = as.integer(rnorm(N, 1.5, .5)),",
        "+ ",
        "    deviceInfo_osVersion = NA,",
        "+ ",
        "    binary_var = draw_binary(N = N, prob = 0.25)",
        "+ ",
        "  ))",
        "> ",
        "View(data)",
        "> ",
        "data <- fabricatr::fabricate(",
        "+ ",
        "  person_identifier = add_level(",
        "+ ",
        "    N = 25, ",
        "+ ",
        "    group = as.integer(rnorm(N, 1.5, .5)),",
        "+ ",
        "    continuous_var = rnorm(N, 3.5, 1.5),",
        "+ ",
        "    binary_var = draw_binary(N = N, prob = 0.25)",
        "+ ",
        "  ))",
        "> ",
        "View(data)",
        "> ",
        "data <- fabricatr::fabricate(",
        "+ ",
        "  person_identifier = add_level(",
        "+ ",
        "    N = 25, ",
        "+ ",
        "    group = sample(1:2),",
        "+ ",
        "    continuous_var_num = rnorm(N, 3.5, 1.5),",
        "+ ",
        "    continuous_var_int = as.integer(rnorm(N, 5, 1)),",
        "+ ",
        "    binary_var = draw_binary(N = N, prob = 0.25)",
        "+ ",
        "  ))",
        "Error in sample(1:2) : \n  Variable lengths must all be equal to `N.` In this call, `N` = 25 while the variable 1 is length 2\n",
        "> ",
        "data <- fabricatr::fabricate(",
        "+ ",
        "  person_identifier = add_level(",
        "+ ",
        "    N = 25, ",
        "+ ",
        "    group = sample((1:2), N),",
        "+ ",
        "    continuous_var_num = rnorm(N, 3.5, 1.5),",
        "+ ",
        "    continuous_var_int = as.integer(rnorm(N, 5, 1)),",
        "+ ",
        "    binary_var = draw_binary(N = N, prob = 0.25)",
        "+ ",
        "  ))",
        "Error in sample.int(length(x), size, replace, prob) : \n  cannot take a sample larger than the population when 'replace = FALSE'\n",
        "> ",
        "data <- fabricatr::fabricate(",
        "+ ",
        "  person_identifier = add_level(",
        "+ ",
        "    N = 25, ",
        "+ ",
        "    group = sample((1:2), N, replace = T),",
        "+ ",
        "    continuous_var_num = rnorm(N, 3.5, 1.5),",
        "+ ",
        "    continuous_var_int = as.integer(rnorm(N, 5, 1)),",
        "+ ",
        "    binary_var = draw_binary(N = N, prob = 0.25)",
        "+ ",
        "  ))",
        "> ",
        "View(data)",
        "> ",
        "groups = 2 # how many experimental groups",
        "> ",
        "data <- fabricatr::fabricate(",
        "+ ",
        "  person_identifier = add_level(",
        "+ ",
        "    N = 25, ",
        "+ ",
        "    group = sample((1:groups), N, replace = T), # ",
        "+ ",
        "    continuous_var_num = rnorm(N, 3.5, 1.5), # like $ spent",
        "+ ",
        "    continuous_var_int = as.integer(rnorm(N, 5, 1)), # like # of something purchased",
        "+ ",
        "    binary_var = draw_binary(N = N, prob = 0.25)",
        "+ ",
        "  ))",
        "> ",
        "View(data)",
        "> ",
        "data <- fabricatr::fabricate(",
        "+ ",
        "  person_identifier = add_level(",
        "+ ",
        "    N = 25, ",
        "+ ",
        "    group = sample((1:groups), N, replace = T), # ",
        "+ ",
        "    continuous_var_num = round(rnorm(N, 3.5, 1.5),2), # like $ spent",
        "+ ",
        "    continuous_var_int = as.integer(rnorm(N, 5, 1)), # like # of something purchased",
        "+ ",
        "    binary_var = draw_binary(N = N, prob = 0.25)",
        "+ ",
        "  ))",
        "> ",
        "View(data)",
        "> ",
        "data <- fabricatr::fabricate(",
        "+ ",
        "  person_identifier = add_level(",
        "+ ",
        "    N = 25, ",
        "+ ",
        "    group = sample((1:groups), N, replace = T), # ",
        "+ ",
        "    continuous_var_num = round(rnorm(N, 12, 1.5),2), # like $ spent",
        "+ ",
        "    continuous_var_int = as.integer(rnorm(N, 5, 1)), # like # of something purchased",
        "+ ",
        "    binary_var = draw_binary(N = N, prob = 0.25)",
        "+ ",
        "  ))",
        "> ",
        "View(data)",
        "> ",
        "data <- fabricatr::fabricate(",
        "+ ",
        "  person_identifier = add_level(",
        "+ ",
        "    N = 25, ",
        "+ ",
        "    group = sample((1:groups), N, replace = T), # ",
        "+ ",
        "    continuous_var_num = round(rnorm(N, 12, 3),2), # like $ spent",
        "+ ",
        "    continuous_var_int = as.integer(rnorm(N, 5, 1)), # like # of something purchased",
        "+ ",
        "    binary_var = draw_binary(N = N, prob = 0.25)",
        "+ ",
        "  ))",
        "> ",
        "View(data)",
        "> ",
        "library(readr)",
        "> ",
        "readr::write_csv(data, \"data/demo_data.csv\")",
        "> ",
        "demo_data <- readr::read_csv(\"data/demo_data.csv\")",
        "\n\u001B[36m──\u001B[39m \u001B[1m\u001B[1mColumn specification\u001B[1m\u001B[22m \u001B[36m─────────────────────────────────────────────────────────────────────────────\u001B[39m\ncols(\n  person_identifier = \u001B[31mcol_character()\u001B[39m,\n  group = \u001B[32mcol_double()\u001B[39m,\n  continuous_var_num = \u001B[32mcol_double()\u001B[39m,\n  continuous_var_int = \u001B[32mcol_double()\u001B[39m,\n  binary_var = \u001B[32mcol_double()\u001B[39m\n)\n\n",
        "> ",
        "View(demo_data)",
        "> ",
        "data <- list(y1 = demo_data$binary_var[group==1],",
        "+ ",
        "             n1 = 1024, ",
        "+ ",
        "             y2 = 57, ",
        "+ ",
        "             n2 = 1009)",
        "Error: object 'group' not found\n",
        "> ",
        "data <- list(y1 = demo_data$binary_var[demo_data$group==1],",
        "+ ",
        "             n1 = 1024, ",
        "+ ",
        "             y2 = 57, ",
        "+ ",
        "             n2 = 1009)",
        "> ",
        "data <- list(y1 = demo_data$binary_var[demo_data$group==1],",
        "+ ",
        "             n1 = nrow(demo_data[demo_data$group==1]), ",
        "+ ",
        "             y2 = 57, ",
        "+ ",
        "             n2 = 1009)",
        "Error: Must subset columns with a valid subscript vector.\n\u001B[34mℹ\u001B[39m Logical subscripts must match the size of the indexed input.\n\u001B[31mx\u001B[39m Input has size 5 but subscript `demo_data$group == 1` has size 25.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "demo_data[demo_data$group==1]",
        "Error: Must subset columns with a valid subscript vector.\n\u001B[34mℹ\u001B[39m Logical subscripts must match the size of the indexed input.\n\u001B[31mx\u001B[39m Input has size 5 but subscript `demo_data$group == 1` has size 25.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "nrow(demo_data$group[demo_data$group==1])",
        "NULL\n",
        "> ",
        "demo_data$group[demo_data$group==1]",
        " [1] 1 1 1 1 1 1 1 1 1 1 1 1 1\n",
        "> ",
        "data <- list(y1 = demo_data$binary_var[demo_data$group==1],",
        "+ ",
        "             n1 = length(demo_data$group[demo_data$group==1]), ",
        "+ ",
        "             y2 = 57, ",
        "+ ",
        "             n2 = 1009)",
        "> ",
        "length(demo_data$group[demo_data$group==1])",
        "[1] 13\n",
        "> ",
        "# BayesFactor indep t test -----",
        "Warning messages:\n",
        "1: Unknown or uninitialised column: `co_compass_minusworst`. \n",
        "2: Unknown or uninitialised column: `continous_var_int`. \n",
        "3: Unknown or uninitialised column: `continous_var_int`. \n",
        "4: Unknown or uninitialised column: `continous_var_int`. \n",
        "5: Unknown or uninitialised column: `continous_var_int`. \n",
        "6: Unknown or uninitialised column: `continous_var_int`. \n",
        "> ",
        "demo_ttest <- ttestBF(x = demo_data$continous_var_int[demo_data$group==1], ",
        "+ ",
        "                      demo_data$continous_var_int[demo_data$group==2], ",
        "+ ",
        "                      paired=FALSE, rscale=.707)",
        "Error in ttestBF(x = demo_data$continous_var_int[demo_data$group == 1],  : \n  could not find function \"ttestBF\"\n",
        "> ",
        "# setup and import data",
        "> ",
        "source(\"requirements.R\")",
        "Loading required package: coda\n",
        "Loading required package: Matrix\n",
        "************\nWelcome to BayesFactor 0.9.12-4.2. If you have questions, please contact Richard Morey (richarddmorey@gmail.com).\n\nType BFManual() to open the manual.\n************\n",
        "\u001B[37m── \u001B[1mAttaching packages\u001B[22m ──────────────────────────────────────────────────────────── tidyverse 1.3.0 ──\u001B[39m\n",
        "\u001B[37m\u001B[32m✓\u001B[37m \u001B[34mggplot2\u001B[37m 3.3.3     \u001B[32m✓\u001B[37m \u001B[34mdplyr  \u001B[37m 1.0.2\n\u001B[32m✓\u001B[37m \u001B[34mtibble \u001B[37m 3.0.4     \u001B[32m✓\u001B[37m \u001B[34mstringr\u001B[37m 1.4.0\n\u001B[32m✓\u001B[37m \u001B[34mtidyr  \u001B[37m 1.1.2     \u001B[32m✓\u001B[37m \u001B[34mforcats\u001B[37m 0.5.0\n\u001B[32m✓\u001B[37m \u001B[34mpurrr  \u001B[37m 0.3.4     \u001B[39m\n",
        "\u001B[37m── \u001B[1mConflicts\u001B[22m ─────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n\u001B[31mx\u001B[37m \u001B[34mtidyr\u001B[37m::\u001B[32mexpand()\u001B[37m masks \u001B[34mMatrix\u001B[37m::expand()\n\u001B[31mx\u001B[37m \u001B[34mdplyr\u001B[37m::\u001B[32mfilter()\u001B[37m masks \u001B[34mstats\u001B[37m::filter()\n\u001B[31mx\u001B[37m \u001B[34mdplyr\u001B[37m::\u001B[32mlag()\u001B[37m    masks \u001B[34mstats\u001B[37m::lag()\n\u001B[31mx\u001B[37m \u001B[34mtidyr\u001B[37m::\u001B[32mpack()\u001B[37m   masks \u001B[34mMatrix\u001B[37m::pack()\n\u001B[31mx\u001B[37m \u001B[34mtidyr\u001B[37m::\u001B[32munpack()\u001B[37m masks \u001B[34mMatrix\u001B[37m::unpack()\u001B[39m\n",
        "here() starts at /Users/lizre/Downloads/bayes_r\n",
        "Loading required package: Rcpp\n",
        "Loading 'brms' package (version 2.14.4). Useful instructions\ncan be found by typing help('brms'). A more detailed introduction\nto the package is available through vignette('brms_overview').\n",
        "\nAttaching package: ‘brms’\n\n",
        "The following object is masked from ‘package:stats’:\n\n    ar\n\n",
        "Loading required package: ggridges\n",
        "The ggjoy package has been deprecated. Please switch over to the ggridges package, which\nprovides the same functionality. Porting guidelines can be found here:\nhttps://github.com/clauswilke/ggjoy/blob/master/README.md\n",
        "Error in library(rethinking) : there is no package called ‘rethinking’\n",
        "In addition: ",
        "Warning messages:\n",
        "1: Unknown or uninitialised column: `continous_var_int`. \n",
        "2: Unknown or uninitialised column: `continous_var_int`. \n",
        "> ",
        "# BayesFactor indep t test -----",
        "> ",
        "demo_ttest <- ttestBF(x = demo_data$continous_var_int[demo_data$group==1], ",
        "+ ",
        "                      demo_data$continous_var_int[demo_data$group==2], ",
        "+ ",
        "                      paired=FALSE, rscale=.707)",
        "Error in ttest.tstat(t = t, n1 = N, nullInterval = nullInterval, rscale = numerator@prior$rscale,  : \n  not enough observations\n",
        "In addition: ",
        "Warning messages:\n",
        "1: Unknown or uninitialised column: `continous_var_int`. \n",
        "2: Unknown or uninitialised column: `continous_var_int`. \n",
        "3: ",
        "In mean.default(y) :",
        " argument is not numeric or logical: returning NA\n",
        "> ",
        "data <- fabricatr::fabricate(",
        "+ ",
        "  person_identifier = add_level(",
        "+ ",
        "    N = 500, ",
        "+ ",
        "    group = sample((1:groups), N, replace = T), # ",
        "+ ",
        "    continuous_var_num = round(rnorm(N, 12, 3), 2), # like $ spent",
        "+ ",
        "    continuous_var_int = as.integer(rnorm(N, 5, 1)), # like # of something purchased",
        "+ ",
        "    binary_var = draw_binary(N = N, prob = 0.25)",
        "+ ",
        "  ))",
        "> ",
        "# BayesFactor indep t test -----",
        "> ",
        "demo_ttest <- ttestBF(x = demo_data$continous_var_int[demo_data$group==1], ",
        "+ ",
        "                      demo_data$continous_var_int[demo_data$group==2], ",
        "+ ",
        "                      paired=FALSE, rscale=.707)",
        "Error in ttest.tstat(t = t, n1 = N, nullInterval = nullInterval, rscale = numerator@prior$rscale,  : \n  not enough observations\n",
        "In addition: ",
        "Warning messages:\n",
        "1: Unknown or uninitialised column: `continous_var_int`. \n",
        "2: Unknown or uninitialised column: `continous_var_int`. \n",
        "3: ",
        "In mean.default(y) :",
        " argument is not numeric or logical: returning NA\n",
        "> ",
        "# BayesFactor indep t test -----",
        "Warning messages:\n",
        "1: Unknown or uninitialised column: `continous_var_int`. \n",
        "2: Unknown or uninitialised column: `continous_var_int`. \n",
        "> ",
        "demo_ttest <- ttestBF(x = demo_data$continous_var_num[demo_data$group==1], ",
        "+ ",
        "                      demo_data$continous_var_num[demo_data$group==2], ",
        "+ ",
        "                      paired=FALSE, rscale=.707)",
        "Error in ttest.tstat(t = t, n1 = N, nullInterval = nullInterval, rscale = numerator@prior$rscale,  : \n  not enough observations\n",
        "In addition: ",
        "Warning messages:\n",
        "1: Unknown or uninitialised column: `continous_var_num`. \n",
        "2: Unknown or uninitialised column: `continous_var_num`. \n",
        "3: ",
        "In mean.default(y) :",
        " argument is not numeric or logical: returning NA\n",
        "> ",
        "# BayesFactor indep t test -----",
        "Warning messages:\n",
        "1: Unknown or uninitialised column: `continous_var_num`. \n",
        "2: Unknown or uninitialised column: `continous_var_num`. \n",
        "> ",
        "demo_ttest <- ttestBF(x = demo_data$continous_var_num[demo_data$group==1], ",
        "+ ",
        "                      y = demo_data$continous_var_num[demo_data$group==2], ",
        "+ ",
        "                      paired=FALSE, rscale=.707)",
        "Error in ttest.tstat(t = t, n1 = N, nullInterval = nullInterval, rscale = numerator@prior$rscale,  : \n  not enough observations\n",
        "In addition: ",
        "Warning messages:\n",
        "1: Unknown or uninitialised column: `continous_var_num`. \n",
        "2: Unknown or uninitialised column: `continous_var_num`. \n",
        "3: ",
        "In mean.default(y) :",
        " argument is not numeric or logical: returning NA\n",
        "> ",
        "demo_data$continous_var_num[demo_data$group==1]",
        "NULL\n",
        "Warning messages:\n",
        "1: Unknown or uninitialised column: `continous_var_num`. \n",
        "2: Unknown or uninitialised column: `continous_var_num`. \n",
        "3: Unknown or uninitialised column: `continous_var_num`. \n",
        "> ",
        "data <- fabricatr::fabricate(",
        "+ ",
        "  person_identifier = add_level(",
        "+ ",
        "    N = 500, ",
        "+ ",
        "    group = sample((1:groups), N, replace = T), # ",
        "+ ",
        "    continuous_var_num = round(rnorm(N, 12, 3), 2), # like $ spent",
        "+ ",
        "    continuous_var_int = as.integer(rnorm(N, 5, 1)), # like # of something purchased",
        "+ ",
        "    binary_var = draw_binary(N = N, prob = 0.25)",
        "+ ",
        "  ))",
        "> ",
        "demo_data <- fabricatr::fabricate(",
        "Warning messages:\n",
        "1: Unknown or uninitialised column: `continous_var_num`. \n",
        "2: Unknown or uninitialised column: `continous_var_num`. \n",
        "+ ",
        "  person_identifier = add_level(",
        "+ ",
        "    N = 500, ",
        "+ ",
        "    group = sample((1:groups), N, replace = T), # ",
        "+ ",
        "    continuous_var_num = round(rnorm(N, 12, 3), 2), # like $ spent",
        "+ ",
        "    continuous_var_int = as.integer(rnorm(N, 5, 1)), # like # of something purchased",
        "+ ",
        "    binary_var = draw_binary(N = N, prob = 0.25)",
        "+ ",
        "  ))",
        "> ",
        "readr::write_csv(data, \"data/demo_data.csv\")",
        "> ",
        "# BayesFactor indep t test -----",
        "> ",
        "demo_ttest <- ttestBF(x = demo_data$continous_var_num[demo_data$group==1], ",
        "+ ",
        "                      y = demo_data$continous_var_num[demo_data$group==2], ",
        "+ ",
        "                      paired=FALSE, rscale=.707)",
        "Error in ttest.tstat(t = t, n1 = N, nullInterval = nullInterval, rscale = numerator@prior$rscale,  : \n  not enough observations\n",
        "In addition: ",
        "Warning message:\n",
        "In mean.default(y) :",
        " argument is not numeric or logical: returning NA\n",
        "> ",
        "demo_data$continous_var_num[demo_data$group==2]",
        "NULL\n",
        "> ",
        "demo_data$continous_var_num",
        "NULL\n",
        "> ",
        "View(demo_data)",
        "> ",
        "View(demo_data$continuous_var_num)",
        "> ",
        "View(demo_data$continuous_var_num)",
        "> ",
        "colnames(demo_data)",
        "[1] \"person_identifier\"  \"group\"              \"continuous_var_num\" \"continuous_var_int\"\n[5] \"binary_var\"        \n",
        "> ",
        "View(demo_data)",
        "> ",
        "demo_data$continous_var_num[demo_data$group==\"2\"]",
        "NULL\n",
        "> ",
        "demo_data$group",
        "  [1] 1 1 1 1 2 1 1 2 1 2 2 2 1 1 1 2 1 2 2 1 2 1 1 1 1 1 2 1 2 2 2 1 2 1 1 1 2 1 2 1 2 1 1 1 2 2 2 1\n [49] 1 2 2 1 2 1 1 1 2 1 2 2 2 1 1 2 2 2 1 1 2 1 2 2 1 2 1 2 2 2 2 2 2 2 2 1 2 2 1 2 1 2 1 2 2 1 2 1\n [97] 2 2 1 1 1 2 2 2 1 1 2 1 1 2 1 2 1 2 2 2 1 2 2 2 1 2 2 2 1 2 2 2 1 1 2 1 2 2 2 1 2 2 2 1 1 2 1 1\n[145] 2 1 2 2 1 2 2 1 1 2 1 1 2 2 2 1 1 2 2 2 2 2 2 2 2 2 1 2 1 2 2 1 1 2 2 2 1 2 1 2 1 2 2 1 2 1 1 2\n[193] 1 1 1 1 1 2 2 1 1 1 1 2 1 1 2 1 1 1 2 1 2 1 1 1 2 2 2 1 1 1 2 2 2 1 1 2 1 1 1 2 1 1 2 2 1 1 1 2\n[241]",
        " 2 1 2 2 2 1 1 1 1 2 2 1 1 1 2 2 1 2 2 1 2 1 1 1 2 1 2 2 2 1 2 2 1 2 1 1 1 2 2 1 1 1 2 2 1 1 2 2\n[289] 1 1 1 2 2 1 1 2 2 2 2 2 1 2 1 2 2 2 1 1 1 2 1 1 2 2 2 1 2 1 1 2 1 2 2 1 2 1 2 1 2 2 2 2 1 1 2 2\n[337] 2 1 1 2 1 2 2 2 1 1 2 1 1 1 1 1 1 2 1 2 2 1 2 1 1 2 1 1 2 2 2 2 2 1 1 1 1 1 1 1 1 2 1 2 1 1 1 2\n[385] 1 1 1 1 2 2 1 1 1 1 1 1 2 1 2 2 1 1 2 1 2 2 1 2 2 2 1 1 1 1 2 1 2 2 1 1 2 2 2 1 1 1 1 2 1 1 2 2\n[433] 2 1 2 2 1 2 2 2 2 1 2 1 1 1 2 2 1 1 1 2 1 1 2 1 2 2 1 2 1 1 2 2 2 2 2 2 1 1 1 1 1 2 2 2 1 2 2 1\n[481] 2",
        " 1 1 1 1 2 1 2 1 2 1 2 2 1 1 2 1 1 2 1\n",
        "> ",
        "typeof(demo_data$group)",
        "[1] \"integer\"\n\nRestarting R session...\n\n"
    ]
}